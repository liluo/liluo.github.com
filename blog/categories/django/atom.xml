<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Django | 落]]></title>
  <link href="http://liluo.org/blog/categories/django/atom.xml" rel="self"/>
  <link href="http://liluo.org/"/>
  <updated>2016-01-03T16:15:14+08:00</updated>
  <id>http://liluo.org/</id>
  <author>
    <name><![CDATA[落]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Django使用静态文件(JS, CSS, Images)配置]]></title>
    <link href="http://liluo.org/blog/2010/05/django-static-files-js-css-images/"/>
    <updated>2010-05-31T15:38:00+08:00</updated>
    <id>http://liluo.org/blog/2010/05/django-static-files-js-css-images</id>
    <content type="html"><![CDATA[<p>Django的URL默认是动态访问，对静态文件访问需要进行设置：</p>

<ul>
<li><p>在 settings.py 文件中定义参数 STATIC_PATH='./static'（意为当前文件目录下的static文件夹）</p></li>
<li><p>更新urls.py文件:</p></li>
</ul>


<p>``` python
import settings</p>

<h1>urlpatterns 添加</h1>

<p>(r'<sup>static/(?P<path>.*)$','django.views.static.serve',{'document_root':</sup> settings.STATIC_PATH})
```</p>

<ul>
<li>模板中调用
<code>python
&lt;link rel="StyleSheet" href="http://liluo.org/static/css/base.css" type="text/css" /&gt;
</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[运行在Apache中Django后台admin界面CSS丢失]]></title>
    <link href="http://liluo.org/blog/2010/05/apache-django-admin-lost-css/"/>
    <updated>2010-05-19T15:27:00+08:00</updated>
    <id>http://liluo.org/blog/2010/05/apache-django-admin-lost-css</id>
    <content type="html"><![CDATA[<p>在 Apache 的 conf/extra/httpd-vhosts.conf 加入以下代码:
```
<VirtualHost *:80></p>

<pre><code>&lt;Directory "/usr/local/lib/site-packages/django/contrib/admin/media"&gt;
    Order Deny,Allow
    Allow from all
&lt;/Directory&gt;  

Alias "/media" "/usr/local/lib/site-packages/django/contrib/admin/media"
&lt;Location "/media"&gt;
    SetHandler None
&lt;/Location&gt;
</code></pre>

<p></VirtualHost>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[django 保存中文抛出 warning incorrect string value]]></title>
    <link href="http://liluo.org/blog/2010/05/django-warning-incorrect-string-value/"/>
    <updated>2010-05-17T12:39:00+08:00</updated>
    <id>http://liluo.org/blog/2010/05/django-warning-incorrect-string-value</id>
    <content type="html"><![CDATA[<p>Django的ORM对象存储中文的时抛出
<code>python
Waring: Incorrect string value:'\xc2\xe4\xc2\xe4" for ...
</code></p>

<h3>中文乱码或出错原因</h3>

<p>Django默认使用UTF-8字符，mysql默认使用litan1字符集。我们需要修改my.ini(my.conf)，配置default-charset，然后重建数据库。</p>

<!-- more -->


<h3>解决方法</h3>

<ul>
<li>修改mysql/bin/my.ini(有的版本是mysql/my.cnf)
```

<h1>在[client] 下面添加</h1>

<p>default-character-set=utf8</p></li>
</ul>


<h1>在[mysqld] 下面添加</h1>

<p>default-character-set=utf8
init_connect='SET NAMES utf8'</p>

<h1>在[mysql] 下面添加</h1>

<p>default-character-set=utf8</p>

<p>```
-  删除已有的数据表，然后重新创建使用"manage.py syncdb"创建表(如果数据不多的话，这里推荐直接删除数据库，然后重新建同名数据库)。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[windows环境配置apache+mod_wsgi+django+域名(domain)]]></title>
    <link href="http://liluo.org/blog/2010/05/win-apache-mod-wsgi-django-domain/"/>
    <updated>2010-05-14T11:53:00+08:00</updated>
    <id>http://liluo.org/blog/2010/05/win-apache-mod-wsgi-django-domain</id>
    <content type="html"><![CDATA[<p>记录一下Apache+mod_wsgi配置域名跑Django的过程。</p>

<p>系统及软件环境:</p>

<blockquote><ul>
<li>Windows Xp</li>
<li>Apache(2.2, xampp 1.7.3)</li>
<li>Django(1.1.1)</li>
<li>mod_wsgi(mod_wsgi-win32-ap22py26-3.0)</li>
</ul>
</blockquote>

<!-- more -->


<p>安装步骤:</p>

<ul>
<li>选择与自己python相匹配的mod_wsgi下载，重命名为mod_wsgi.so并丢到Apache安装目录里的modules 文件夹中。</li>
<li>加载mod_wsgi，在Apache配置文件httpd.conf中，增加一行：</li>
</ul>


<p><code>python
LoadModule wsgi_module modules/mod_wsgi.so
</code></p>

<ul>
<li>创建命名为demo的项目，并在demo目录中新建conf文件夹。新建conf/demo.wsgi文件，内容如下：</li>
</ul>


<p>``` python
import os
import sys</p>

<p>sys.stdout = sys.stderr</p>

<p>from os.path import abspath, dirname, join
from site import addsitedir
from django.core.handlers.wsgi import WSGIHandler</p>

<p>sys.path.insert(0, abspath(join(dirname(<strong>file</strong>), "../")))
sys.path.insert(0, abspath(join(dirname(<strong>file</strong>), "../../")))
os.environ["DJANGO_SETTINGS_MODULE"] = "demo.settings " #your settings module</p>

<p>application = WSGIHandler()
```</p>

<ul>
<li>配置域名

<ol>
<li>在 C:\WINDOWS\system32\drivers\etc\hosts文件中添加"127.0.0.1 liluo.com" (将liluo.com替换成自己的域名)</li>
<li>找到apache\conf\extra目录httpd-vhosts.conf文件中"#NameVirtualHost *:80" 这行，将"#"去掉。在该文件内追加以下内容：</li>
</ol>
</li>
</ul>


<p>```
<VirtualHost *:80></p>

<pre><code>ServerName      liluo.com        #测试域名
ServerAlias       www.liluo.com    #测试域名
DocumentRoot    F:/htdocs
WSGIScriptAlias / F:/htdocs/demo/conf/demo.wsgi
Alias /static F:/htdocs/demo/static

&lt;Location "/static"&gt;
    SetHandler None
&lt;/Location&gt;

&lt;Directory " F:/htdocs/demo/static"&gt;
    Order Deny,Allow
    Allow from all
&lt;/Directory&gt;

&lt;Directory " F:/htdocs/demo/wsgi"&gt;
    Order Deny,Allow
    Allow from all
&lt;/Directory&gt;

&lt;Directory "/usr/local/lib/site-packages/django/contrib/admin/media"&gt;
    Order Deny,Allow
    Allow from all
&lt;/Directory&gt;

Alias "/media"  "/usr/local/lib/site-packages/django/contrib/admin/media"
&lt;Location "/media"&gt;
    SetHandler None
&lt;/Location&gt;
</code></pre>

<p></VirtualHost></p>

<p>```</p>

<ul>
<li>重启Apache, 即可看到“It worked!”</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django ImportError: Settings cannot be imported]]></title>
    <link href="http://liluo.org/blog/2010/04/django-importerror-settings-cannot-be-imported/"/>
    <updated>2010-04-06T17:30:00+08:00</updated>
    <id>http://liluo.org/blog/2010/04/django-importerror-settings-cannot-be-imported</id>
    <content type="html"><![CDATA[<p>使用Django时在命令行中敲击Python命令进入交互模式，如果直接如下操作：</p>

<p><code>python
from django.template import  Template ,Context
t  = Template("Test is ")
</code></p>

<p>会导致错误:</p>

<p><code>python
ImportError: Settings cannot be imported, because environment variable DJANGO_SETTINGS_MODULE is undefined.
</code></p>

<!-- more -->


<p>原因是django的配置信息没有初始化。解决方法有两种：</p>

<ol>
<li>切换到Project或者APP所在的目录使用manage.py shell（或者python manage.py shell）命令启动交互窗口;</li>
<li>手动将django的配置初始化：</li>
</ol>


<p><code>python
from django.conf import settings
settings.configure()
</code></p>
]]></content>
  </entry>
  
</feed>
